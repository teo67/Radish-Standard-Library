d STRING p {
    d length {
        h {
            h STRLEN(this)
        }
    }
    d indexOf p t(input p "") {
        d len p this.length
        for(d i p 0, i < len, i++) {
            if(this[i] == input) {
                h i
            }
        }
        h -1
    }
    d substring p t(start p 0, finish p this.length) {
        d len p this.length
        if(start < 0 || start >= len || finish < 0 || finish > len) {
            throw "String.substring inputs are out of range! (0 <-> length - 1 for start, 0 <-> length for finish)"
        }
        d r p ""
        for(d i p start, i < finish, i++) {
            r += this[i]
        }
        h r
    }
    d begins p t(input p "") {
        h this.substring(0, input.length) == input
    }
    d ends p t(input p "") {
        h this.substring(this.length - input.length) == input
    }
    d has p t(input p "") {
        h this.indexOf(input) != -1
    }
    d split p t() {
        d r p []
        d len p this.length
        for(d i p 0, i < len, i++) {
            r[i] p this[i]
        }
        h r
    }
}
h STRING